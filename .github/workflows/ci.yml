name: CI

# ❶ push / PR 皆觸發
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# ❷ 環境共用：快取 Node 依賴 & Playwright 瀏覽器
defaults:
  run:
    shell: bash

jobs:
# ─────────────────── Unit Test ───────────────────
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - run: npm ci

      - name: Run Vitest
        run: npm run test:unit

# ─────────────────── E2E Test ────────────────────
  e2e:
    needs: unit          # Unit 綠燈才跑 E2E
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - run: npm ci

      # 安裝 Playwright 瀏覽器（一次即可快取）
      - name: Install Playwright
        run: npx playwright install --with-deps

      # 執行 E2E（playwright.config.js 會自啟 preview 伺服器）
      - name: Run Playwright tests
        run: npx playwright test

      # 將 HTML 報表存為 workflow artifact（可選）
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7

# ─────────────────── Build & Deploy (可選) ────────
  build:
    needs: e2e          # 測試全綠才打包
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-pages-artifact@v2
        with:
          path: dist                # Vite build 輸出
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/deploy-pages@v2   # GitHub Pages 部署
